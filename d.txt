diff --git a/client/actions/category.js b/client/actions/category.js
new file mode 100644
index 0000000..2a8d3b7
--- /dev/null
+++ b/client/actions/category.js
@@ -0,0 +1,51 @@
+import fetch from 'isomorphic-fetch';
+import { HOST } from '../config';
+
+const fetchAPI = (method, api, data=null, token=null) => {
+	switch(method) {
+		case 'GET':
+			api = data ? api+'/'+data : api
+			return fetch(HOST+'/'+api, {
+				method: method
+			})
+			.then(resp => resp.json())
+			.catch(err => console.log(err));			
+
+		case 'POST':
+			return fetch(`${HOST}/${api}`, {
+				method: method,
+				headers: {
+					'Accept': 'application/json',
+					'Content-Type': 'application/json',
+					Authorization: `Bearer ${token}`
+				},
+				body: JSON.stringify(data)
+			})
+			.then(resp => resp.json())
+			.catch(err => console.log(err));
+
+		case 'DELETE':
+			return fetch(`${HOST}/${api}/${data}`, {
+				method: method,
+				headers: {
+					'Accept': 'application/json',
+					'Content-Type': 'application/json',
+					'Authorization': `Bearer ${token}`
+				}
+			})
+			.then(resp => resp.json())
+			.catch(err => console.log(err));
+	}
+}
+
+export const create = (category, token) =>
+	fetchAPI('POST', 'category', category, token)
+
+export const getCategories = () =>
+	fetchAPI('GET', 'categories')
+
+export const singleCategory = slug =>
+	fetchAPI('GET', 'category', slug)
+
+export const removeCategory = (slug, token) =>
+	fetchAPI('DELETE', 'category', slug, token)
diff --git a/client/components/crud/Category.js b/client/components/crud/Category.js
new file mode 100644
index 0000000..aaea15d
--- /dev/null
+++ b/client/components/crud/Category.js
@@ -0,0 +1,120 @@
+import { useState, useEffect } from 'react';
+import Link from 'next/link';
+import Router from 'next/router';
+import { Cookie } from '../../actions/auth';
+import { create, getCategories, removeCategory } from '../../actions/category';
+
+const Category = () => {
+	const [values, setValues] = useState({
+		name       : '',
+		error      : false,
+		success    : false,
+		categories : [],
+		removed    : false,
+		reload     : false
+	});
+
+	const { name, error, success, categories, removed, reload } = values;
+	const token = Cookie('get','token');
+
+	useEffect(() => {
+		loadCategories();
+	}, [reload]);
+
+	const loadCategories = () => {
+		getCategories().then(data => {
+			if (data && data.error) {
+				console.log(data.error);
+			} else {
+				setValues({ ...values, categories: data })
+			}
+		});
+	};
+
+	const showCategories = () => {
+		return categories.map((c, i) => {
+			return(
+				<button
+					onDoubleClick={() => deleteConfirm(c.slug)}
+					title="Double clieck to delete"
+					key={i}
+					className="btn btn-outline-primary mr-1 ml-1 mt-3"
+				>
+					{c.name}
+				</button>
+			)
+		})
+	}
+
+	const deleteConfirm = slug => {
+		let answer = window.confirm('Are you sure you want to delete this category?')
+		if (answer) deleteCategory(slug);
+	}
+
+	const deleteCategory = slug => {
+		// console.log('delete', slug);
+		removeCategory(slug, token).then(data => {
+			if (data.error) {
+				console.log(data.error);
+			} else {
+				setValues({ ...values, error: false, success: false, name: '', removed: true, reload: !reload });
+			}
+		});
+	};
+
+
+	const clickSubmit = e => {
+		e.preventDefault();
+		// console.log('create category', name);
+		create({ name }, token).then(data => {
+			if (data.error) {
+				setValues({ ...values, error: data.error, success: false });
+			} else {
+				setValues({ ...values, error: false, success: true, name: '', removed: false, reload: !reload });
+			}
+		});
+	};
+
+	const handleChange = e => {
+		setValues({ ...values, name: e.target.value, error: false, success: false, removed: false });
+	};
+
+	const showNotification = () => {
+		let notification;
+		const msgClass = success ? 'success' : 'danger';
+
+		if (success) notification = 'Category is created!';
+		if ( error ) notification = 'Category already exist!';
+		if (removed) notification = 'Category is removed!';
+
+		return <p className={'text-'+msgClass}>{notification}</p>;
+	}
+
+	const mouseMoveHandler = e => {
+			setValues({ ...values, error: false, success: false, removed: '' });
+	};	
+
+	const newCategoryForm = () => (
+		<form onSubmit={clickSubmit}>
+			<div className="form-group">
+				<label className="text-muted">Name</label>
+				<input type="text" className="form-control" onChange={handleChange} value={name} required />
+			</div>
+			<div>
+				<button type="submit" className="btn btn-primary">
+					Create
+				</button>
+			</div>
+		</form>
+	);
+
+	return( 
+		<React.Fragment>
+			{ showNotification() }
+			{  newCategoryForm() }
+			{   showCategories() }
+		</React.Fragment>
+	);
+};
+
+export default Category;
\ No newline at end of file
diff --git a/client/pages/admin/crud/category-tag.js b/client/pages/admin/crud/category-tag.js
new file mode 100644
index 0000000..fdd76ba
--- /dev/null
+++ b/client/pages/admin/crud/category-tag.js
@@ -0,0 +1,26 @@
+import Layout from '../../../components/Layout';
+import Admin from '../../../components/auth/Admin';
+import Category from '../../../components/crud/Category';
+import Link from 'next/link';
+
+export default function CategoryTag() {
+	return (
+		<Layout>
+			<Admin>
+				<div className="container-fluid">
+						<div className="row">
+							<div className="col-md-12 pt-5 pb-5">
+								<h2>Manage Categories and Tags</h2>
+							</div>
+							<div className="col-md-6">
+									<Category />
+							</div>
+							<div className="col-md-6">
+								<p>tag</p>
+							</div>
+						</div>
+				</div>
+			</Admin>
+		</Layout>
+	);
+};
diff --git a/client/pages/admin/index.js b/client/pages/admin/index.js
index 25d5aab..c8e4e10 100755
--- a/client/pages/admin/index.js
+++ b/client/pages/admin/index.js
@@ -7,7 +7,21 @@ export default function AdminIndex() {
 				<Layout>
 						<Admin>
 							<div className="container-fluid">
-								<h2>Admin Dashboard</h2>
+										<div className="row">
+												<div className="col-md-12 pt-5 pb-5">
+														<h2>Admin Dashboard</h2>
+												</div>
+												<div className="col-md-4">
+														<ul class="list-group">
+																<li className="list-group-item">
+																		<Link href="/admin/crud/category-tag">
+																				<a>Create Category</a>
+																		</Link>
+																</li>
+														</ul>
+												</div>
+												<div className="col-md-8">right</div>
+										</div>
 							</div>
 						</Admin>
 				</Layout>
